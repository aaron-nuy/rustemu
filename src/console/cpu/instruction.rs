pub use crate::console::cpu::register::*;
pub use crate::console::cpu::instruction_operands::*;

pub enum Instruction {
    LD(Register, Register),
    LDImm(Register, u8),
    LDFromHLInd(Register),
    LDToHLInd(Register),
    LDToHlIndImm(u8),
    LDFromBCIndToA(),
    LDFromDEIndToA(),
    LDToBCIndFromA(),
    LDToDEIndFromA(),
    LDFromImmIndToA(u16),
    LDToImmIndFromA(u16),
    LDToAFromCInd(),
    LDFromAToCInd(),
    LDFromImmIndToA8(u8),
    LDToImmIndFromA8(u8),
    LDFromHLIndDecToA(),
    LDToHLIndDecFromA(),
    LDFromHLIndIncToA(),
    LDToHLIndIncFromA(),
    LDImm16(Register16, u16),
    LDToImmIndFromSP(u16),
    LDSPFromHL(),
    PUSH(Register16),
    POP(Register16),
    LDHLFromAdjustedSP(i8),
    ADD(Register),
    ADDHLInd(),
    ADDImm(u8),
    ADDC(Register),
    ADDCHLInd(),
    ADDCImm(u8),
    SUB(Register),
    SUBHLInd(),
    SUBImm(u8),
    SUBC(Register),
    SUBCHLInd(),
    SUBCImm(u8),
    CP(Register),
    CPHLInd(),
    CPImm(u8),
    INC(Register),
    INCHLInd(),
    DEC(Register),
    DECHLInd(),
    AND(Register),
    ANDHLInd(),
    ANDImm(u8),
    OR(Register),
    ORHLInd(),
    ORImm(u8),
    XOR(Register),
    XORHLInd(),
    XORImm(u8),
    CCF(),
    SCF(),
    DAA(),
    CPL(),
    INC16(Register16),
    DEC16(Register16),
    ADDHL(Register16),
    ADDSPImm(i8),
    RLCA(),
    RRCA(),
    RRA(),
    RLA(),
    RLCR(Register),
    RRCR(Register),
    RLCHLInd(),
    RRCHLInd(),
    RLR(Register),
    RLHLInd(),
    RRR(Register),
    RRHLInd(),
    SRAR(Register),
    SRAHLInd(),
    SLAR(Register),
    SLAHLInd(),
    SRLR(Register),
    SRLHLInd(),
    SWAPR(Register),
    SWAPHLInd(),
    BITR(u8, Register),
    BITHLInd(u8),
    RESETR(u8, Register),
    RESETHLInd(u8),
    SETR(u8, Register),
    SETHLInd(u8),
    NOP(),
    JP(u16),
    JPHL(),
    JPCC(FlowCondition, u16),
    JR(i8),
    JRCC(FlowCondition, i8),
    CALL(u16),
    CALLCC(FlowCondition, u16),
    RET(),
    RETCC(FlowCondition),
    RETI(),
    RST(u8),
    HALT(),
    STOP(),
    DI(),
    EI(),
}
